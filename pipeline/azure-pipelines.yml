# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - master

schedules:
  - cron: "0 0 * * *"
    displayName: Daily Midnight Check
    branches:
      include:
      - master
    always: true

variables: 
  dockerrepo: dynamicd/winjenkins
  majorMinorVersion: 1.0
  versionNano: "1809"
  # semanticVersion counter is automatically incremented by one in each execution of pipeline
  # second parameter is seed value to reset to every time the referenced majorMinorVersion is changed
  semanticVersion: $[counter(variables['majorMinorVersion'], 0)]

stages:
  - stage: buildAndPush
    jobs:
      - job: DockerBuild
        pool:
          vmImage: 'windows-2019'
        steps:
          - task: PowerShell@2
            displayName: Check for a new build of Jenkins
            inputs:
              filepath: .\pipeline\checkNewBuilds.ps1
              arguments: -minorVer $(semanticVersion)
          - task: Docker@2
            displayName: Login to DockerHub
            condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
            inputs:
              command: login
              containerRegistry: DockerHub
          - task: Docker@2
            displayName: Build Container
            condition: and(succeeded(), not(and(eq(variables['newBuild'], 'False'), eq(variables['Build.Reason'], 'Schedule'))))
            inputs:
              command: build
              arguments: --build-arg VERSIONNANO=$(versionNano) --build-arg VERSIONJENKINS=$(versionJenkins)
              repository: $(dockerrepo)
              tags: v$(versionJenkins)
          - task: Docker@2
            displayName: Push Artifact
            condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'), not(and(eq(variables['newBuild'], 'False'), eq(variables['Build.Reason'], 'Schedule'))))
            inputs:
              command: push
              repository: $(dockerrepo)
              tags: v$(versionJenkins)